{"version":3,"sources":["useFetchJobs.js","Job.jsx","JobsPagination.jsx","SearchForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["JOBS_URL","ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","parse","how_to_apply","src","company_logo","alt","height","Text","Button","onClick","preOpen","Collapse","in","fontSize","fontWeight","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGMA,EAAW,4EAGXC,EACU,eADVA,EAEM,WAFNA,EAGG,QAHHA,EAIkB,uBAKxB,SAASC,EAAQC,EAAOC,GACpB,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAO,CACHK,SAAS,EACTC,KAAM,IAGZ,KAAKN,EACH,OAAO,2BACAE,GADP,IAEIG,SAAS,EACTC,KAAMH,EAAOI,QAAQD,OAG3B,KAAKN,EACH,OAAO,2BACAE,GADP,IAEIG,SAAS,EACTG,MAAOL,EAAOI,QAAQC,MACtBF,KAAM,KAGZ,KAAKN,EACH,OAAO,2BACAE,GADP,IAEIO,YAAaN,EAAOI,QAAQE,cAGlC,QACE,OAAOP,G,6DCSAQ,MAhDf,YAAqB,IAAPC,EAAM,EAANA,IAAM,EAEQC,oBAAS,GAFjB,mBAETC,EAFS,KAEHC,EAFG,KAKhB,OACI,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACG,eAACD,EAAA,EAAKE,KAAN,WACK,sBAAKD,UAAU,iCAAf,UACI,gCACI,eAACD,EAAA,EAAKG,MAAN,WACKP,EAAIQ,MADT,MACkB,sBAAMH,UAAU,+BAAhB,SAAgDL,EAAIS,aAGtE,cAACL,EAAA,EAAKM,SAAN,CAAeL,UAAU,kBAAzB,SACM,IAAIM,KAAKX,EAAIY,YAAYC,uBAI/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYV,UAAU,OAArC,SAA6CL,EAAIP,OACjD,cAACqB,EAAA,EAAD,CAAOC,QAAQ,YAAf,SAA4Bf,EAAIgB,WAGhC,mBAAGC,MAAO,CAACC,UAAY,aAAvB,SAEKC,IAAMnB,EAAIoB,mBAGnB,qBAAKC,IAAKrB,EAAIsB,aAAcC,IAAKvB,EAAIS,QAASJ,UAAU,oBAAoBmB,OAAO,UAGvF,cAACpB,EAAA,EAAKqB,KAAN,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBAAIxB,GAAQ,SAAAyB,GAAO,OAAKA,MACjCb,QAAQ,UAFZ,SAIKb,EAAO,cAAgB,kBAGhC,cAAC2B,EAAA,EAAD,CAAUC,GAAI5B,EAAd,SACI,mBAAGG,UAAU,OAAOY,MAAO,CAACc,SAAS,OAAQC,WAAW,UAAxD,SACKb,IAAMnB,EAAIiC,uB,QC5CpB,SAASC,EAAT,GAAyD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAAStC,EAAe,EAAfA,YACtD,SAASuC,EAAWC,GAClBF,GAAQ,SAAAG,GAAQ,OAAIA,EAAWD,KAGjC,OACE,eAACE,EAAA,EAAD,WACY,IAATL,GAAc,cAACK,EAAA,EAAWC,KAAZ,CAAiBd,QAAS,kBAAMU,GAAY,MACjD,IAATF,GAAc,cAACK,EAAA,EAAWE,KAAZ,CAAiBf,QAAS,kBAAMS,EAAQ,IAAxC,eACdD,EAAO,GAAK,cAACK,EAAA,EAAWG,SAAZ,IACZR,EAAO,GAAK,cAACK,EAAA,EAAWE,KAAZ,CAAiBf,QAAS,kBAAMU,GAAY,IAA5C,SAAiDF,EAAO,IACrE,cAACK,EAAA,EAAWE,KAAZ,CAAiBE,QAAM,EAAvB,SAAyBT,IACxBrC,GAAe,cAAC0C,EAAA,EAAWE,KAAZ,CAAiBf,QAAS,kBAAMU,EAAW,IAA3C,SAAgDF,EAAO,IACtErC,GAAe,cAAC0C,EAAA,EAAWK,KAAZ,CAAiBlB,QAAS,kBAAMU,EAAW,S,oBCblD,SAASS,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAC3C,OACE,cAACC,EAAA,EAAD,CAAM5C,UAAU,OAAhB,SACE,eAAC4C,EAAA,EAAKC,IAAN,CAAU7C,UAAU,kBAApB,UACE,eAAC4C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACJ,EAAA,EAAKK,MAAN,0BACA,cAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EAAeS,MAAOV,EAAOd,YAAayB,KAAK,cAAcjE,KAAK,YAE5F,eAACwD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EAAeS,MAAOV,EAAO/B,SAAU0C,KAAK,WAAWjE,KAAK,YAEtF,cAACwD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKM,GAAG,OAAOtD,UAAU,OAAzC,SACE,cAAC4C,EAAA,EAAKW,MAAN,CAAYJ,SAAUR,EAAeS,MAAOV,EAAOc,UAAWH,KAAK,YAAYI,GAAG,YAAYC,MAAM,iBAAiBtE,KAAK,WAAWY,UAAU,gBC2C1I2D,MAjDf,WAAgB,IAAD,EACe/D,mBAAS,IADxB,mBACN8C,EADM,KACEkB,EADF,OAEShE,mBAAS,GAFlB,mBAENkC,EAFM,KAEAC,EAFA,OJwCA,SAAsBW,EAAQZ,GAAO,IAAD,EACrB+B,qBAAW5E,EAAS,CAAEK,KAAM,GAAID,SAAS,IADpB,mBACxCH,EADwC,KACjC4E,EADiC,KAwC/C,OArCAC,qBAAU,WAEN,IAAMC,EAAeC,IAAMC,YAAYC,SACvCL,EAAS,CAAE1E,KAAMJ,IACjBiF,IAAMG,IAAIrF,EAAU,CAChBsF,YAAaL,EAAaM,MAC1B5B,OAAO,aAAG6B,UAAU,EAAMzC,KAAMA,GAASY,KAC1C8B,MAAK,SAAAC,GACJX,EAAS,CAAE1E,KAAMJ,EAAkBO,QAAS,CAAED,KAAMmF,EAAIC,WACzDC,OAAM,SAAAC,GACDX,IAAMY,SAASD,IACnBd,EAAS,CAAE1E,KAAMJ,EAAeO,QAAS,CAAEC,MAAOoF,QAKtD,IAAME,EAAeb,IAAMC,YAAYC,SAavC,OAZAF,IAAMG,IAAIrF,EAAU,CAChBsF,YAAaS,EAAaR,MAC1B5B,OAAO,aAAG6B,UAAU,EAAMzC,KAAMA,EAAO,GAAMY,KAC9C8B,MAAK,SAAAC,GACJX,EAAS,CAAE1E,KAAMJ,EAA8BO,QAAS,CAAEE,YAAiC,IAApBgF,EAAIC,KAAKK,aACjFJ,OAAM,SAAAC,GACDX,IAAMY,SAASD,IACnBd,EAAS,CAAE1E,KAAMJ,EAAeO,QAAS,CAAEC,MAAOoF,QAK/C,WACHZ,EAAagB,SACbF,EAAaE,YAIlB,CAACtC,EAAQZ,IAEL5C,EI5EoC+F,CAAavC,EAAQZ,GAA3DxC,EAJM,EAINA,KAAMD,EAJA,EAIAA,QAASG,EAJT,EAISA,MAAOC,EAJhB,EAIgBA,YAY7B,OACE,eAACyF,EAAA,EAAD,CAAWlF,UAAU,iBAArB,UACE,oBAAIA,UAAU,OAAd,yBAIA,cAAC6B,EAAD,CAAgBC,KAAMA,EAAMC,QAASA,EAAStC,YAAcA,IAI5D,cAACgD,EAAD,CAAYC,OAAQA,EAAQC,cAnBN,SAACiC,GACzB,IAAMO,EAAQP,EAAEQ,OAAO/B,KACjBD,EAAQwB,EAAEQ,OAAOhC,MACvBrB,EAAQ,GACR6B,GAAU,SAAAyB,GACR,OAAO,2BAAKA,GAAZ,kBAAyBF,EAAQ/B,UAkBhC/D,GAAW,oBAAIW,UAAU,cAAd,yBAIXR,GAAS,oBAAIQ,UAAU,YAAd,kCAITV,EAAKgG,KAAI,SAAA3F,GACR,OACE,cAAC,EAAD,CAAkBA,IAAKA,GAAbA,EAAI8D,WCtCT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e83627f.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst JOBS_URL = 'https://api.allorigins.win/raw?url=https://jobs.github.com/positions.json'\r\n\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\n\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n      case ACTIONS.MAKE_REQUEST:\r\n        return { \r\n            loading: true, \r\n            jobs: [] \r\n        }\r\n\r\n      case ACTIONS.GET_DATA:\r\n        return { \r\n            ...state, \r\n            loading: false, \r\n            jobs: action.payload.jobs \r\n        }\r\n\r\n      case ACTIONS.ERROR:\r\n        return { \r\n            ...state, \r\n            loading: false, \r\n            error: action.payload.error, \r\n            jobs: [] \r\n        }\r\n\r\n      case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n        return { \r\n            ...state, \r\n            hasNextPage: action.payload.hasNextPage \r\n        }\r\n        \r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport default function useFetchJobs(params, page) {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\r\n  \r\n    useEffect(() => {\r\n        // Get Data\r\n        const cancelToken1 = axios.CancelToken.source()\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n        axios.get(JOBS_URL, {\r\n            cancelToken: cancelToken1.token,\r\n            params: { markdown: true, page: page, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n        })\r\n      \r\n\r\n        //  Next Page\r\n        const cancelToken2 = axios.CancelToken.source()\r\n        axios.get(JOBS_URL, {\r\n            cancelToken: cancelToken2.token,\r\n            params: { markdown: true, page: page + 1, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n        })\r\n        \r\n\r\n        // return \r\n        return () => {\r\n            cancelToken1.cancel()\r\n            cancelToken2.cancel()\r\n        }\r\n\r\n\r\n    }, [params, page])\r\n    \r\n    return state\r\n  }","import React, {useState} from 'react'\r\nimport {Badge, Card, Button, Collapse} from 'react-bootstrap'\r\n// import ReactMarkdown from 'react-markdown'\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nfunction Job({job}) {\r\n    // State\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // JSX Render\r\n    return (\r\n        <Card className=\"mb-3\">\r\n           <Card.Body>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n                        </Card.Title>\r\n\r\n                        <Card.Subtitle className=\"text-muted mb-2\">\r\n                            { new Date(job.created_at).toLocaleDateString() }\r\n                        </Card.Subtitle>\r\n\r\n                        {/* Badges */}\r\n                        <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n                        <Badge variant=\"secondary\">{job.location}</Badge>\r\n                    \r\n                            \r\n                        <p style={{wordBreak : 'break-all'}}>\r\n                            {/* <ReactMarkdown source={job.how_to_apply} /> */}\r\n                            {parse(job.how_to_apply)}\r\n                        </p>\r\n                    </div>\r\n                    <img src={job.company_logo} alt={job.company} className=\"d-none d-md-block\" height=\"30\" />\r\n                </div>\r\n           \r\n                <Card.Text>\r\n                    <Button \r\n                        onClick={()=>setOpen(preOpen => !preOpen)}\r\n                        variant=\"primary\"\r\n                    >\r\n                        {open ? 'Hide Detail' : 'View Detail'}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <p className=\"mt-4\" style={{fontSize:\"15px\", fontWeight:\"normal\"}}>\r\n                        {parse(job.description)}\r\n                    </p></Collapse>\r\n           </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n  function adjustPage(amount) {\r\n    setPage(prevPage => prevPage + amount)\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  )\r\n}","import React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nexport default function SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\">\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n          <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  )\r\n}","import React, {useState} from 'react';\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap';\n\nimport Job from './Job'; \nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\n\n// JSX Rendering\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage]=useState(1)\n\n  const {jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n\n  const handleParamChange = (e) => {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n    <Container className=\"my-5 container\">\n      <h1 className=\"mb-3\">Github Jobs</h1>\n\n\n      {/* Job Pagination */}\n      <JobsPagination page={page} setPage={setPage} hasNextPage ={hasNextPage } />\n\n\n      {/* Search From */}\n      <SearchForm params={params} onParamChange={handleParamChange}/>\n\n\n      {/* Loading Component */}\n      {loading && <h1 className=\"loading-box\">Loading ...</h1>}\n\n\n      {/* Error Component */}\n      {error && <h1 className=\"error-box\">Error. Try again ...</h1>}\n\n\n      {/* Mapping Jobs */}\n      {jobs.map(job => {\n        return (\n          <Job key={job.id} job={job}/>\n        )\n      })}\n\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}